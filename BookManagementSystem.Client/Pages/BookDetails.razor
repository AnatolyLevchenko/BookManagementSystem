@page "/books/{Id}"
@using BookManagement.Shared
@inject BookService BookService
@inject NavigationManager NavigationManager

<div class="card p-4 shadow-sm">
    <h3 class="card-title mb-4 text-center">Book Details</h3>

    @if (_book == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <ul class="list-group">
            <li class="list-group-item"><strong>Title:</strong> @_book.Title</li>
            <li class="list-group-item"><strong>Author:</strong> @_book.Author</li>
            <li class="list-group-item"><strong>Genre:</strong> @_book.Genre</li>
            <li class="list-group-item"><strong>Year:</strong> @_book.Year</li>
        </ul>

        <div class="d-flex justify-content-between mt-4">
            <button @onclick="GoBack" class="btn btn-secondary">Back</button>
            <button @onclick="NavigateToEditPage" class="btn btn-primary">Edit</button>
        </div>
    }
</div>

@code {
    [Parameter] public string Id { get; set; } = null!;

    private BookReadDto? _book;

    protected override async Task OnInitializedAsync()
    {
        _book = await BookService.GetBookByIdAsync(Convert.ToInt32(Id));
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/books");
    }

    private void NavigateToEditPage()
    {
        NavigationManager.NavigateTo($"/edit-book/{Id}");
    }
}